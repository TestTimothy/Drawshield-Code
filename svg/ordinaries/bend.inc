<?php /* Copyright 2010-2021 Karl Wilcox, Mattias Basaglia

This file is part of the DrawShield.net heraldry image creation program

    DrawShield is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

     DrawShield is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with  DrawShield.  If not, see https://www.gnu.org/licenses/.
 */


require_once("bend-helper.inc");

$width = 300;
$sinister = false;
$removeSinister = false;

if ( existModifierWithKeyterm($node,'sinister') ) {
    $sinister = true;
}
if ( existModifierWithKeyterm($node,'couped') ) {
    $width = 200;
    if ($sinister) {
        $ordinary['shape_spec'] = (string)build_bend_sinister($layout, $width, 200);
        $removeSinister = true;
    } else {
        $ordinary['shape_spec'] = (string)build_bend($layout, $width, 200);
    }
} elseif ( existModifierWithKeyterm($node,'double-fracted') ) {
        $width = 250;
        if ($sinister)
            // TODO write bend fracted sinister (and set $removeSinister
            $ordinary['shape_spec'] = (string)build_bend_fracted($layout, $width, 2);
        else
            $ordinary['shape_spec'] = (string)build_bend_fracted($layout, $width, 2);
} elseif ( existModifierWithKeyterm($node, 'engouled')) {
  $ordinary['body'] = '<g
     transform="translate(0,540)"
     >
    <path
       d="m 7.4412,-534.66 v 204.55 l 984.2188,984.23 c 66.94,-60.77 132.44,-135.12 184.64,-224.46 l -964.28,-964.32 z"
       style="stroke:#666666;stroke-width:8"
       />
    <g
       style="stroke:#666666;stroke-width:14.2772"
       transform="matrix(0.47386,0.29905,-0.29905,0.47386,699.02,-143.9)"
       >
      <g
         transform="matrix(-1.0534,0,0,1.049,1191.8,37.843)"
         style="stroke:#666666;stroke-width:13.58184;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1">
        <path
           d="m 914.62,168.19 c -56.38,-36.65 48.26,-120.55 -38.73,-125.124 -39.96,-2.072 -65.63,68.304 -102.24,102.084 l -138.96,75.55 c -16.54,28.78 -36.62,26.34 -45.85,-9.21 -13.88,-18.81 -28.46,-24.7 -43.45,-22.62 -28.64,3.98 -51.01,40.22 -88.71,64.45 -10.07,4.48 -18.8,9.69 -24.74,11.94 -23.04,8.73 -20.06,-4.31 -9.8,-11.62 34.93,-22.06 49.97,-34.87 42.86,-40.68 -16.9,-24.08 -24.68,-65.88 -33.31,-106.02 -24.3,23.5 -42.21,43.15 -55.44,65.21 -10.13,16.9 -11.06,34.36 11.27,53.26 15.86,39.37 -11.59,23.57 -26.42,2.83 -16.2,-27 -36.41,-50.08 -32.41,-96.81 -80.94,92.12 -94.81,176.09 -50.01,252.93 41.55,29.88 -346.216,43.14 -324.536,124.59 9.314,170.67 80.846,166.07 99.596,224.06 -28.89,123.1 389.9,80.51 584.62,83.41 33.38,-31.34 105.29,-104.93 18.61,-120.94 -163.11,9.16 -169.3,-15.66 -208.79,-30.1 -29.88,-30.43 -46.63,-69.62 6.54,-22.04 119.67,54.48 183.1,9.85 274.49,37.07 54.31,16.18 107.04,41.52 157.11,82.36 18.59,7.33 14.44,-42.93 7.62,-91.64 6.64,-11.63 -5.09,-16.16 -19.17,-19.77 l -4.24,-59.97 c 2.13,-27.77 -36.78,21.77 -45.69,16.18 -10.01,-6.29 7.89,-56.24 -15.32,-43.72 -19.4,12.73 -30.34,17.2 -42.76,23.1 -9.91,-19.37 0.26,-66.26 -19.97,-46.07 -17.62,19.15 -33.75,24.79 -37.06,18.77 -1.65,-12.03 5.84,-37.95 -6.3,-30.98 -19.34,2.78 -38.82,17.71 -57.98,5.64 -33.43,-7.91 -23.51,-15.32 -25.85,-22.87 44.29,-8.83 86.89,-12.87 127.77,-7.01 130.35,70.07 281.03,123.87 292.83,78.1 -184.69,-75.08 -32,-161.9 20.5,-203.53 -33.7,-7.59 -122.38,-6.02 -136.55,-0.25 -47.97,-31.66 77.95,-84.16 153.55,-221.96 -53,-20.11 -135.26,15.32 -167.16,61.59 -54.53,79.09 -39.4,129.09 -84.2,131.82 -37.72,27.86 -134.6,42.71 -207.94,80.07 -8.46,8.66 -14.22,6.77 -5.56,-9.97 11.7,-21.56 23.35,-39.17 34.84,-42.7 15.74,-28.58 30.8,1.44 46.16,6.3 l 18.5,-39.72 c 8.76,-20.97 28.91,17.66 35.12,4.54 l 19.23,-58.7 c 13.32,20.76 28.84,46.81 30.5,39.44 14.69,-32.13 31.96,-77.54 38.29,-66.49 10.5,11.3 26.18,35.06 25.46,19.3 l 25.52,-74.37 c 7.76,-11.69 35.88,-16.86 28.16,-39.71 z"
           style="stroke:#666666;stroke-width:13.58184;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
        <path
           d="m 431.49,373.16 c -28.66,-8.96 -10.24,-40.92 -12.46,-38.18 -1.71,2.12 -37.96,20.02 -19.67,52.45 29.36,38.77 68.56,33.63 87.92,21.15 19.4,-12.5 38.18,-53.65 18.09,-98.07 -18.12,-15.7 -84.22,24.24 -89.26,25.35 -2.8,0.62 85.19,-30.76 71.64,19.22 10.47,43.57 -43.96,37.52 -56.26,18.08 z"
           style="stroke:#666666;stroke-width:13.58184;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
      </g>
    </g>
    <g
       transform="matrix(-0.29905,-0.47386,-0.47386,0.29905,681.12,-147.45)"
       style="stroke:#666666;stroke-width:14.2772">
      <g
         style="stroke:#666666;stroke-width:13.58184;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         transform="matrix(-1.0534,0,0,1.049,1191.8,37.843)"
         >
        <path
           style="stroke:#666666;stroke-width:13.58184;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 859.77,177.94 c -56.38,-36.65 48.26,-120.55 -38.73,-125.124 -39.96,-2.072 -65.63,68.304 -102.24,102.084 l -138.96,75.55 c -16.54,28.78 -36.62,26.34 -45.85,-9.21 -13.88,-18.81 -28.46,-24.7 -43.45,-22.62 -28.64,3.98 -51.01,40.22 -88.71,64.45 -10.07,4.48 -18.8,9.69 -24.74,11.94 -23.04,8.73 -20.06,-4.31 -9.8,-11.62 34.93,-22.06 49.97,-34.87 42.86,-40.68 -16.9,-24.08 -24.68,-65.88 -33.31,-106.02 -24.3,23.5 -42.21,43.15 -55.44,65.21 -10.13,16.9 -11.06,34.36 11.27,53.26 15.86,39.37 -11.59,23.57 -26.42,2.83 -16.2,-27 -36.41,-50.08 -32.41,-96.81 -80.94,92.12 -94.81,176.09 -50.01,252.93 41.55,29.88 -141.371,-51.71 -168.958,33 -75.017,181.9 -186.232,129.02 117.208,294.13 64.46,70.19 216.71,102.03 411.43,104.93 33.38,-31.34 105.29,-104.93 18.61,-120.94 -163.11,9.16 -169.3,-15.66 -208.79,-30.1 -29.88,-30.43 -46.63,-69.62 6.54,-22.04 119.67,54.48 183.1,9.85 274.49,37.07 54.31,16.18 107.04,41.52 157.11,82.36 18.59,7.33 14.44,-42.93 7.62,-91.64 6.64,-11.63 -5.09,-16.16 -19.17,-19.77 l -4.24,-59.97 c 2.13,-27.77 -36.78,21.77 -45.69,16.18 -10.01,-6.29 7.89,-56.24 -15.32,-43.72 -19.4,12.73 -30.34,17.2 -42.76,23.1 -9.91,-19.37 0.26,-66.26 -19.97,-46.07 -17.62,19.15 -33.75,24.79 -37.06,18.77 -1.65,-12.03 5.84,-37.95 -6.3,-30.98 -19.34,2.78 -38.82,17.71 -57.98,5.64 -33.43,-7.91 -23.51,-15.32 -25.85,-22.87 44.29,-8.83 86.89,-12.87 127.77,-7.01 130.35,70.07 281.03,123.87 292.82,78.1 -184.68,-75.08 -32.01,-161.9 20.46,-203.53 -33.65,-7.59 -122.33,-6.02 -136.5,-0.25 -47.97,-31.66 77.93,-84.16 153.5,-221.96 -52.93,-20.11 -135.21,15.32 -167.11,61.59 -54.53,79.09 -39.4,129.09 -84.2,131.82 -37.72,27.86 -134.6,42.71 -207.94,80.07 -8.46,8.66 -14.22,6.77 -5.56,-9.97 11.7,-21.56 23.35,-39.17 34.84,-42.7 15.74,-28.58 30.8,1.44 46.16,6.3 l 18.5,-39.72 c 8.76,-20.97 28.91,17.66 35.12,4.54 l 19.23,-58.7 c 13.32,20.76 28.84,46.81 30.5,39.44 14.69,-32.13 31.96,-77.54 38.29,-66.49 10.5,11.3 26.18,35.06 25.46,19.3 l 25.52,-74.37 c 7.76,-11.69 35.88,-16.86 28.16,-39.71 z" />
        <path
           style="stroke:#666666;stroke-width:13.58184;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="m 431.49,373.16 c -28.66,-8.96 -10.24,-40.92 -12.46,-38.18 -1.71,2.12 -37.96,20.02 -19.67,52.45 29.36,38.77 68.56,33.63 87.92,21.15 19.4,-12.5 38.18,-53.65 18.09,-98.07 -18.12,-15.7 -84.22,24.24 -89.26,25.35 -2.8,0.62 85.19,-30.76 71.64,19.22 10.47,43.57 -43.96,37.52 -56.26,18.08 z" />
      </g>
    </g>
  </g>';
} elseif ( existModifierWithKeyterm($node,'lozengy')) {
    // lozengy can have 1 colour, in which case it is just conjoined lozenges in that colour
    // or two colours, in which case:
    // The first colour is a normal, straight edged fess
    // The second colour is the conjoined lozenges superimposed
    $numCols = 0;
    foreach($node->childNodes as $childNode) {
        if ($childNode->nodeName == blazonML::E_TINCTURE) $numCols++;
    }
    if ($numCols < 2) {
        $ordinary['body'] = '<path d="M0,0l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53
                     l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53z " />';
    } else {
        $ordinary['body'] = '<path d="M0,0 l105,-105 1700,1700 -210,210 -1700,-1700 z" />';
        $ordinary['body2'] = '<path d="M0,0l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53
                     l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53 l106,-106 -53,159 -159,53z m53,53 l159,-53 -212.1,212.1 53,-159z m53,53z " />';
    }
// } elseif ( existModifierWithKeyterm($node, 'nowy')) { // special handling for some linetypes
//   $ordinary['body'] = '<path d="m 710.7,289.3 c 74.77,74.98 104.14,184.01 77.13,286.4 0,0 468.57,468.6 468.57,468.6 0,0 -212.1,212.1 -212.1,212.1 0,0 -468.55,-468.52 -468.55,-468.52 -102.42,27.01 -211.47,-2.37 -286.45,-77.18 -74.77,-74.98 -104.14,-184.01 -77.13,-286.4 0,0 -348.57,-348.564 -348.57,-348.564 0,0 212.136,-212.136 212.136,-212.136 0,0 348.514,348.52 348.514,348.52 102.42,-27.01 211.47,2.37 286.45,77.18 0,0 0,0 0,0" />';
} elseif ( existModifierWithKeyterm($node, 'quadrate')) { 
  $ordinary['body'] = '<path d="m -131.63,82.34 212.13,-212.13 347.48,347.49 70.71,-70.71 353.56,353.55 -70.71,70.71 448.86,448.95 -212.1,212.1 -448.89,-448.92 -70.72,70.71 -353.55,-353.55 70.71,-70.71 z" />';
} else if ( $node->getAttribute('number') == '1' ) {
        if ($sinister) {
            $removeSinister = true;
            $ordinary['shape_spec'] = (string)build_bend_sinister($layout, 300, -100);
        } else {
            $ordinary['shape_spec'] = (string)build_bend($layout, 300, -100);
        }
} else {
    $builder = new PathBuilder();
    $width = (200 + 156) * 2;
    build_bend($layout, 200, -100, 156, $builder);
    build_bend($layout, 200, -100, -156, $builder);
    $ordinary['shape_spec'] = (string)$builder;
}

if ( existModifierWithKeyterm($node,'compony1') )
  $ordinary['body2'] = '<path d="M 186,-186 398,26 26,398 -186,186 z M 610,238 822,450 450,822 238,610 z m 420,424 220,213 -376,375 -212,-220 z" />';
elseif (existModifierWithKeyterm($node,'compony2') )
  $ordinary['body2'] = '<path d="M 0,0 186,-186 292,-80 106,106 212,212 26,398 -80,292 106,106 z M 212,212 398,26 504,132 318,318 424,424 238,610 132,504 318,318 z M 424,424 610,238 716,344 530,530 636,636 450,822 344,716 530,530 z M 636,636 822,450 928,556 742,742 848,848 662,1030 556,928 742,742 z m 212,212 182,-186 110,106 -186,186 106,106 -186,190 -106,-110 186,-186 z" />';

if ( division_to_modifier($node, 'quarterly') )
  $ordinary['body2'] = 'X-100Y-100B848D200f848h200   X1100Y1100F849H200b849d200';

$ordinary['rotate_pattern'] = 45;
// Below is the transform for checky of 3 rows
// $ordinary['rotate_pattern'] = 'translate(54,-16) rotate(-45) scale(0.6) ';

if ($sinister) {
    $ordinary['chargesOn'] = placement_in_bend($layout->rect_area(), true, 45);
} else {
    $ordinary['chargesOn'] = placement_in_bend($layout->rect_area(), false, 45);
}

$ordinary['chargesWithin'] = bend_within($layout, $width);

if ($removeSinister) {
    $node->removeChild( getModifierNodeWithKeyterm($node, 'sinister'));
}

if ( existModifierWithKeyterm($node, 'riveted')) {
  include '_rivet.inc';
  $rivetList = '';
  $start = 5;
  $offset = 0;
  for ($i = 5; $i < 1000; $i += 80) {
    $rivetList .= '<g transform="translate(' . ($i + 180 - $offset) . ',' . $i . ')">' . $rivet . '</g>';
    $rivetList .= '<g transform="translate(' . ($i - $offset) . ',' . ($i + 180) . ')">' . $rivet . '</g>';
  }
  $ordinary['body3'] = $rivetList;
}
